@model ePunkt.IssueTracker.Models.TagRule

<h2>Edit tagging rule</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Tag, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Tag, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tag)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Group, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Group, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Group)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TextRegex, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TextRegex, new { @class = "form-control regex" })
                @Html.ValidationMessageFor(model => model.TextRegex)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatorRegex, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.CreatorRegex, new { @class = "form-control regex" })
                @Html.ValidationMessageFor(model => model.CreatorRegex)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServerVariablesRegex, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ServerVariablesRegex, new { @class = "form-control regex" })
                @Html.ValidationMessageFor(model => model.ServerVariablesRegex)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StackTraceRegex, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.StackTraceRegex, new { @class = "form-control regex" })
                @Html.ValidationMessageFor(model => model.StackTraceRegex)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IssueStatus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.IssueStatus, new { list = "stati", @class = "form-control regex" })
                @Html.ValidationMessageFor(model => model.IssueStatus)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>

    <datalist id="stati">
        @foreach (string status in ViewBag.Stati)
        {
            <option value="@status" />
        }
    </datalist>
}
