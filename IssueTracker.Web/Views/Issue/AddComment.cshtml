@model IssueTracker.Web.Models.Issue
@section Content {
    <form method="post" action="@Url.Action("AddComment", "Issue", new { id = Model.Id })">
        <div class="form-group">
            <label>Status:</label>
            <select name="status" class="form-control">         
                @{
                    var stati = ViewData["availableStati"] as IEnumerable<string>;
                }
                @if (stati != null)
                {
                    foreach (var status in stati)
                    {
                        <option value="@status" @(status.Equals(Model.Status, StringComparison.InvariantCultureIgnoreCase) ? " selected=\"selected\"" : "")>
                            @status</option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label>Comment:</label>
            @Html.TextArea("comment", new { @class = "form-control" })
        </div>

        <div class="form-group">
            <label>Notification to:</label>
            @Html.TextBox("email", null, new { @class = "form-control" })
        </div>

        <div class="form-group">
            <button type="submit" value="Save" class="btn btn-primary">Save</button>
        </div>
    </form>
}
@section Script {
@* ReSharper disable Html.IdNotResolved *@
    <script type="text/javascript">
        $("#email").keyup(function () {
            $("#public").attr("checked", $("#email").val() == "" ? "" : "checked");
        });
    </script>
@* ReSharper restore Html.IdNotResolved *@

}
